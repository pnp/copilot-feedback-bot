{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "dockerRegistryUrl": {
            "type": "string"
        },
        "dockerRegistryUsername": {
            "type": "string"
        },
        "dockerRegistryPassword": {
            "type": "securestring"
        },
        "dockerRegistryStartupCommand": {
            "type": "string"
        },
        "service_account_client_id": {
            "type": "String"
        },
        "service_account_client_secret": {
            "type": "SecureString"
        },
        "tenant_id": {
            "type": "String"
        },
        "app_catalog_team_app_id": {
            "type": "String"
        },
        "app_service_name": {
            "type": "String"
        },
        "app_service_plan_name": {
            "type": "String"
        },
        "app_service_plan_sku": {
            "type": "String",
            "defaultValue": "Standard"
        },
        "app_service_plan_skuCode": {
            "type": "String",
            "defaultValue": "S1"
        },
        "function_app_service_name": {
            "type": "String"
        },
        "sql_server_name": {
            "type": "String"
        },
        "sql_database_name": {
            "type": "String"
        },
        "sql_server_admin_login": {
            "type": "String"
        },
        "sql_server_admin_login_password": {
            "type": "SecureString"
        },
        "redis_account_name": {
            "type": "String"
        },
        "imageWebServer": {
            "type": "string"
        },
        "imageFunctions": {
            "type": "string"
        },
        "storage_account_name": {
            "type": "String"
        },
        "location": {
            "type": "string"
        },
        "workspace_analytics_name": {
            "type": "String",
            "defaultValue": "CopilotFeedbackBotAnalytics"
        }
    },
    "variables": {
        "webRoot": "[concat('https://', parameters('app_service_name'), '.azurewebsites.net')]",
        "apiScope": "[concat('api://', parameters('app_service_name'), '.azurewebsites.net', '/', parameters('service_account_client_id'), '/access')]",
        "sqlConnectionString": "[concat('Server=tcp:', parameters('sql_server_name'), '.database.windows.net,1433;Initial Catalog=', parameters('sql_database_name'), ';Persist Security Info=False;User ID=', parameters('sql_server_admin_login'), ';Password=', parameters('sql_server_admin_login_password'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2023-12-01",
            "name": "[parameters('app_service_plan_name')]",
            "location": "[parameters('location')]",
            "sku": {
                "Tier": "[parameters('app_service_plan_sku')]",
                "Name": "[parameters('app_service_plan_skuCode')]",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2023-12-01",
            "name": "[parameters('app_service_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('app_service_plan_name'))]"
            ],
            "kind": "app",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('app_service_plan_name'))]",
                "name": "[parameters('app_service_name')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "DOCKER_REGISTRY_SERVER_URL",
                            "value": "[parameters('dockerRegistryUrl')]"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                            "value": "[parameters('dockerRegistryUsername')]"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                            "value": "[parameters('dockerRegistryPassword')]"
                        },
                        {
                            "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                            "value": "false"
                        }
                    ],
                    "linuxFxVersion": "[parameters('imageWebServer')]",
                    "appCommandLine": "[parameters('dockerRegistryStartupCommand')]",
                    "alwaysOn": true,
                    "ftpsState": "FtpsOnly"
                },
                "clientAffinityEnabled": true,
                "httpsOnly": true,
                "publicNetworkAccess": "Enabled"
            },
            "resources": [
                {
                    "apiVersion": "2015-08-01",
                    "name": "appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('app_service_name'))]"
                    ],
                    "properties": {
                        "SITE_ROLE": "app",
                        "AppCatalogTeamAppId": "[parameters('app_catalog_team_app_id')]",
                        "AuthConfig__ClientId": "[parameters('service_account_client_id')]",
                        "AuthConfig__ClientSecret": "[parameters('service_account_client_secret')]",
                        "AuthConfig__TenantId": "[parameters('tenant_id')]",
                        "AuthConfig__ApiScope": "[variables('apiScope')]",
                        "MicrosoftAppId": "[parameters('service_account_client_id')]",
                        "MicrosoftAppPassword": "[parameters('service_account_client_secret')]",
                        "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
                        "XDT_MicrosoftApplicationInsights_Mode": "default",
                        "WEBSITE_NODE_DEFAULT_VERSION": "18.18.0",
                        "WEBSITE_NPM_DEFAULT_VERSION": "9.8.1",
                        "WebRoot": "[variables('webRoot')]",
                        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', parameters('workspace_analytics_name')), '2015-05-01').ConnectionString]"
                    }
                },
                {
                    "apiVersion": "2015-08-01",
                    "name": "connectionstrings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('app_service_name'))]"
                    ],
                    "properties": {
                        "Storage": {
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storage_account_name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storage_account_name')),'2015-05-01-preview').key1, ';EndpointSuffix=core.windows.net')]",
                            "type": "Custom"
                        },
                        "Redis": {
                            "value": "[concat(parameters('redis_account_name'), '.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/redis', parameters('redis_account_name')),'2024-03-01').primaryKey)]",
                            "type": "Custom"
                        },
                        "SQL": {
                            "value": "[variables('sqlConnectionString')]",
                            "type": "SQLAzure"
                        }
                    }
                }
            ]
        },


        {
            "apiVersion": "2020-02-02-preview",
            "name": "[parameters('workspace_analytics_name')]",
            "type": "microsoft.insights/components",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace_analytics_name'))]"

            ],
            "properties": {
                "ApplicationId": "[parameters('workspace_analytics_name')]",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace_analytics_name'))]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2023-09-01",
            "name": "[parameters('workspace_analytics_name')]",
            "location": "[parameters('location')]",
            "properties": {}
        },

        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2023-12-01",
            "name": "[parameters('function_app_service_name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('app_service_plan_name'))]"
            ],
            "tags": {},
            "kind": "functionapp,linux",
            "properties": {
                "appSettings": [
                    {
                        "name": "DOCKER_REGISTRY_SERVER_URL",
                        "value": "[parameters('dockerRegistryUrl')]"
                    },
                    {
                        "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                        "value": "[parameters('dockerRegistryUsername')]"
                    },
                    {
                        "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                        "value": "[parameters('dockerRegistryPassword')]"
                    },
                    {
                        "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                        "value": "false"
                    }
                ],
                "linuxFxVersion": "[parameters('imageFunctions')]",
                "appCommandLine": "[parameters('dockerRegistryStartupCommand')]",

                "enabled": true,
                "hostNameSslStates": [],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('app_service_plan_name'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "dnsConfiguration": {},
                "vnetRouteAllEnabled": false,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 200,
                    "minimumElasticInstanceCount": 0
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "vnetBackupRestoreEnabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            },
            "resources": [
                {
                    "apiVersion": "2015-08-01",
                    "name": "appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('function_app_service_name'))]"
                    ],
                    "properties": {
                        "SITE_ROLE": "function",
                        "PROJECT": "src/Functions/Functions.csproj",
                        "FUNCTIONS_WORKER_RUNTIME": "dotnet-isolated",
                        "FUNCTIONS_EXTENSION_VERSION": "~4",
                        "AppCatalogTeamAppId": "[parameters('app_catalog_team_app_id')]",
                        "AuthConfig__ClientId": "[parameters('service_account_client_id')]",
                        "AuthConfig__ApiScope": "[variables('apiScope')]",
                        "AuthConfig__ClientSecret": "[parameters('service_account_client_secret')]",
                        "AuthConfig__TenantId": "[parameters('tenant_id')]",
                        "MicrosoftAppId": "[parameters('service_account_client_id')]",
                        "MicrosoftAppPassword": "[parameters('service_account_client_secret')]",
                        "WebRoot": "[variables('webRoot')]",
                        "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
                        "XDT_MicrosoftApplicationInsights_Mode": "default",
                        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', parameters('workspace_analytics_name')), '2015-05-01').ConnectionString]",
                        "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storage_account_name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storage_account_name')),'2015-05-01-preview').key1, ';EndpointSuffix=core.windows.net')]",
                        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storage_account_name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storage_account_name')),'2015-05-01-preview').key1, ';EndpointSuffix=core.windows.net')]"
                    }
                },
                {
                    "apiVersion": "2015-08-01",
                    "name": "connectionstrings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('function_app_service_name'))]"
                    ],
                    "properties": {
                        "Storage": {
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storage_account_name'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storage_account_name')),'2015-05-01-preview').key1, ';EndpointSuffix=core.windows.net')]",
                            "type": "Custom"
                        },
                        "Redis": {
                            "value": "[concat(parameters('redis_account_name'), '.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/redis', parameters('redis_account_name')),'2024-03-01').primaryKey)]",
                            "type": "Custom"
                        },
                        "SQL": {
                            "value": "[variables('sqlConnectionString')]",
                            "type": "SQLAzure"
                        }
                    }
                }
            ]
        }
    ]
}
